# Assuming that LDAP server is configures in the way that
# 1. all existing users and groups are located under single domain
# 2. users have object class specified in parameter "pa.ldap.user.objectclass"
# 3. groups have object class  specified in parameter "pa.ldap.group.objectclass"
# 4. User & group name is defined in cn (Common Name) attribute

# EXAMPLE of user entry
#
# dn: cn=jdoe,dc=example,dc=com
# cn: jdoe
# firstName: John
# lastName: Doe
# objectClass: inetOrgPerson

# EXAMPLE of group entry
#
# dn: cn=mygroup,dc=example,dc=com
# cn: mygroup
# firstName: John
# lastName: Doe
# uniqueMember: cn=djoe,dc=example,dc=com
# objectClass: groupOfUniqueNames

###################################################################################
# LDAP configuration
###################################################################################

# URL of a ldap used for authentication
pa.ldap.url=ldap://localhost

# path in the LDAP tree users
pa.ldap.userssubtree=dc=activeeon,dc=com

# path in the LDAP tree groups
# if empty, then the value for pa.ldap.userssubtree is used
#pa.ldap.groupssubtree=

# the filter that allows to find the user dn given its scheduler login
# %s is replaced by the user-submitted login
pa.ldap.user.filter=(&(objectclass=inetOrgPerson)(uid=%s))

# on windows active directory, use the following user filter
# pa.ldap.user.filter=(&(objectclass=user)(sAMAccountName=%s))

# if set to true, the username instead of distinguished name will be used in group search
pa.ldap.group.search.use.uid=false

# retrieves the groups the user dn belongs to
# the '%s' parameter is the user dn previously retrieved
pa.ldap.group.filter=(&(objectclass=groupOfUniqueNames)(uniqueMember=%s))

# example group filter on OpenLDAP using uid instead of dn
# pa.ldap.group.filter=(&(objectclass=posixGroup)(memberUID=%s))

# on windows active directory, use the following group filter
# pa.ldap.group.filter=(&(objectclass=group)(member:1.2.840.113556.1.4.1941:=%s))

# the attribute in the group entry that matches the jaas' group name
pa.ldap.group.name.attr=cn

# the attribute in the user entry that will represent the tenant name
# NOTE: in a multi-ldap configuration, when this setting is not defined, the ldap domain name will be used as tenant
# pa.ldap.tenant.attr=

# authentication method used to connect to LDAP : none (for anonymous connection), simple or a SASL method
pa.ldap.authentication.method=none

# Use starttls to negotiate encryption with the server
# if starttls is used, pa.ldap.connection.pooling must be set to "false"
# in order to trust the ldap server certificate, you can use tools/installcert-usn-20140115.jar to create a keystore
# containing the ldap server certificate. This keystore must then be used as truststore in the ldap configuration file.
pa.ldap.starttls=false

# disable hostname verification for starttls
pa.ldap.starttls.any.hostname=false

# disable certificate check for starttls (for testing purpose)
pa.ldap.starttls.any.certificate=false

# login name used to perform ldap's binding
# ex uid=narf,ou=People,dc=activeeon,dc=com
pa.ldap.bind.login=

# password used to perform ldap's binding
pa.ldap.bind.pwd=

# path of the java keystore file used by LDAP module for SSL/TLS authentication
pa.ldap.keystore.path=

# path of the java truststore file used by LDAP module for SSL/TLS authentication
pa.ldap.truststore.path=

# password for the keystore defined by pa.ldap.keystore.path
pa.ldap.keystore.passwd=

# password for the truststore defined by pa.ldap.truststore.path
pa.ldap.truststore.passwd=

# boolean defining whether the LDAP service provider has to use connection pooling or not
pa.ldap.connection.pooling=true

#--------Authentication fallback Properties ---------------------
#--use file login authentication and group membership checking----
#--verification if LDAP login fails-------------------------------

# check user password and group membership in login and group files
# (as performed in FileLogin method), if user is not found in LDAP.
#
# It use pa.[scheduler.core|RM].defaultloginfilename to authenticate user and
# pa.[scheduler.core|RM].defaultgroupfilename files to check user membership.
# In any case, no fallback is performed if user is found in LDAP but has entered an incorrect password).
# true or false.
# NOTE: in a multi-domain ldap configuration, this setting is ignored
# and file authentication fallback will always (and only) be used for users without domain
pa.ldap.authentication.fallback=false

# check user group membership in group file (as performed in FileLogin method)
# if user is not found in its corresponding requested LDAP group.
# true or false.
pa.ldap.group.membership.fallback=false

# check user tenant membership in tenant file (as performed in FileLogin method)
# if tenant attribute is not defined or is empty for the corresponding requested LDAP user.
# true or false.
pa.ldap.tenant.membership.fallback=false
